{"version":3,"sources":["helpers/getMovies.js","hooks/useGetMovies.js","components/MoviesGridItem.js","components/MoviesGrid.js","components/SearchBar.js","LexflixApp.js","index.js"],"names":["getMovies","query","a","URL","encodeURI","fetch","resp","json","data","movies","results","map","movie","id","title","img","poster_path","useGetMovies","useState","loading","state","setState","useEffect","then","MoviesGridItem","className","src","alt","MoviesGrid","keyword","key","SearchBar","setKeyword","inputValue","setInputValue","onSubmit","e","preventDefault","type","onChange","target","value","placeholder","LexflixApp","ReactDOM","render","document","getElementById"],"mappings":"0LAeeA,EAfA,uCAAG,WAAQC,GAAR,qBAAAC,EAAA,4DACA,mCACVC,EAFU,4DACA,mCADA,kBAEqEC,UAAWH,IAFhF,SAGGI,MAAMF,GAHT,cAGVG,EAHU,gBAIGA,EAAKC,OAJR,cAIVC,EAJU,OAKVC,EAASD,EAAKE,QAAQC,KAAK,SAAAC,GAC/B,MAAO,CACLC,GAAID,EAAMC,GACVC,MAAOF,EAAME,MACbC,IAAK,kCAAoCH,EAAMI,gBATnC,kBAYTP,GAZS,4CAAH,sDCwBAQ,EArBM,SAAEhB,GAAY,IAAD,EACNiB,mBAAS,CACjCV,KAAM,GACNW,SAAS,IAHqB,mBACzBC,EADyB,KAClBC,EADkB,KAkBhC,OAZAC,qBAAW,WACI,KAAVrB,GACDD,EAAUC,GACPsB,MAAM,SAAAd,GACLY,EAAS,CACPb,KAAMC,EACNU,SAAS,SAIhB,CAAClB,IAEGmB,GCVMI,EATQ,SAAC,GAA0B,IAAvBX,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IACpC,OACE,yBAAKU,UAAU,yBACb,yBAAKC,IAAMX,EAAMY,IAAMb,IACvB,4BAAMA,EAAN,KAAiBD,EAAjB,OCcSe,EAhBI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACTZ,EAAaY,GAA9BrB,EAD0B,EAC1BA,KAAMW,EADoB,EACpBA,QAEd,OACE,6BACE,4BAAMU,GACQ,KAAZA,GAAkBV,GAAW,0CAC/B,yBAAKM,UAAU,wBACZjB,EAAKG,KAAK,SAAAC,GAAK,OACd,kBAAC,EAAD,eAAgBkB,IAAKlB,EAAMC,IAAQD,UCc9BmB,EAxBG,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,WAAkB,EACFd,mBAAS,IADP,mBAC/Be,EAD+B,KACnBC,EADmB,KAatC,OACE,0BAAMC,SAPkB,SAACC,GACzBA,EAAEC,iBACFL,EAAWC,GACXC,EAAc,MAKZ,2BAAOI,KAAK,OAAOC,SAZG,SAACH,GACzBF,EAAcE,EAAEI,OAAOC,QAW6BA,MAAQR,EAAaS,YAAY,mBCD1EC,EAbI,WAAO,IAAD,EACOzB,mBAAS,IADhB,mBAChBW,EADgB,KACPG,EADO,KAGvB,OACE,6BAASP,UAAU,WACjB,uCACA,kBAAC,EAAD,CAAWO,WAAYA,IACvB,6BACA,kBAAC,EAAD,CAAYH,QAAUA,MCP5Be,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d178f6d9.chunk.js","sourcesContent":["const getMovies = async ( query ) => {\n  const API_KEY = '2c6f5815f22f5c25c6d4047ce80dbda7';\n  const URL = `https://api.themoviedb.org/3/search/movie?api_key=${ API_KEY }&query=${ encodeURI( query ) }`;\n  const resp = await fetch(URL);\n  const data = await resp.json();\n  const movies = data.results.map( movie => {\n    return {\n      id: movie.id,\n      title: movie.title,\n      img: 'https://image.tmdb.org/t/p/w342' + movie.poster_path\n    }\n  })\n  return movies;\n}\n\nexport default getMovies;","import {useEffect, useState} from 'react';\nimport getMovies from '../helpers/getMovies';\n\nconst useGetMovies = ( query ) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  useEffect( () => {\n    if(query !== ''){\n      getMovies(query)\n        .then( movies => {\n          setState({\n            data: movies,\n            loading: false\n          })\n        })\n      }\n  }, [query])\n\n  return state;\n}\n\nexport default useGetMovies;","import React from 'react';\n\nconst MoviesGridItem = ( { id, title, img } ) => {\n  return (\n    <div className='column is-one-quarter'>\n      <img src={ img } alt={ title }></img>\n      <h4>{ title } ({ id })</h4>\n    </div>\n  )\n}\n\nexport default MoviesGridItem;","import React from 'react';\nimport useGetMovies from '../hooks/useGetMovies';\nimport MoviesGridItem from './MoviesGridItem';\n\nconst MoviesGrid = ({ keyword }) => {\n  const { data, loading} = useGetMovies(keyword);\n\n  return (\n    <div>\n      <h2>{ keyword }</h2>\n      { keyword !== '' && loading && <p>Cargando...</p> }\n      <div className='columns is-multiline'>\n        {data.map( movie => (\n          <MoviesGridItem key={movie.id} {...movie} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default MoviesGrid;","import React, { useState } from 'react';\nimport propTypes from 'prop-types'\n\nconst SearchBar = ( { setKeyword } ) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  }\n\n  const handleInputSubmit = (e) => {\n    e.preventDefault();\n    setKeyword(inputValue);\n    setInputValue('');\n  }\n\n  return(\n    <form onSubmit={ handleInputSubmit }>\n      <input type='text' onChange={ handleInputChange } value={ inputValue } placeholder='Search movie' />\n    </form>\n  )\n}\n\nSearchBar.propTypes = {\n  setKeyword: propTypes.func.isRequired\n}\n\nexport default SearchBar","import React, { useState } from 'react';\nimport MoviesGrid from './components/MoviesGrid';\nimport SearchBar from './components/SearchBar';\n\nconst LexflixApp = () => {\n  const [keyword, setKeyword] = useState('');\n\n  return(\n    <section className='section'>\n      <h1>LEXFLIX</h1>\n      <SearchBar setKeyword={setKeyword}/>\n      <hr/>\n      <MoviesGrid keyword={ keyword } />\n    </section>\n  )\n}\n\nexport default LexflixApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport LexflixApp from './LexflixApp';\n// import './index.css';\n\nReactDOM.render(\n  <LexflixApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}